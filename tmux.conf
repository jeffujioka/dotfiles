# References:
# https://github.com/tmux/tmux/wiki
# https://man7.org/linux/man-pages/man1/tmux.1.html
# https://www.youtube.com/watch?v=qd3mfYS_Xow

# prefix is Alt+d
unbind C-b
set -g prefix C-a
set -g detach-on-destroy off

#### key bindings ####

# C-l: Clear terminal (sending Ctrl+l) and tmux scrollback buffer
# (A sleep after send-keys may be needed in case clear via Ctrl+l is too slow)
bind -n C-l send-keys -R C-l \; run-shell -d 0.3 \; clear-history

# Ensure that we can send `Ctrl-a` to other apps.
# bind C-a send-prefix

# reload config file
bind r source-file ~/.tmux.conf \; display ".tmux.conf reloaded!"

# quickly open a new window
bind N new-window

set -g pane-border-style fg=red
set -g pane-active-border-style 'fg=colour160,bg=colour214'
set -g pane-border-status top
set -g pane-border-format '#[bold]#{pane_title} - #{pane_index}#[default]'

# Indexes of windows/panes to start at 1 (better to use Alt+NUMBER to switch to window)
set -g base-index 1
setw -g pane-base-index 1

set -g default-terminal "screen-256color"

# highlighting current window using specified colour
set -g window-status-current-style bg=blue

# transparent background
set -g window-active-style bg=terminal
set -g window-style bg=color0

set -g status on
set -g status-justify centre
set -g status-left-length 50
set -g status-right "%H:%M %d.%m.%Y"

# toggle status bar
bind S set-option status

# set status-line background color to white
# set -g status-style 'fg=#12488B,bg=colour254'

# message status
set -g message-style 'fg=colour226,bg=colour160'

#
# Windows
#
################################################################################

# Ctrl + Shift + Left/Right to swap windows positions
bind -n C-S-Left swap-window -t -1
bind -n C-S-Right swap-window -t +1

#
# Panes
#
################################################################################

set -g display-panes-time 2000

#
#   Splitting
#
bind | split-window -h
bind - split-window -v

#   Select pane: Alt + h, l, k, or j
bind -n M-h select-pane -L
bind -n M-l select-pane -R
bind -n M-k select-pane -U
bind -n M-j select-pane -D

#   Resize pane: Shift + Alt + h, l, k, or j
bind -n S-M-Up resize-pane -U 5
bind -n S-M-Down resize-pane -D 5
bind -n S-M-Left resize-pane -L 5
bind -n S-M-Right resize-pane -R 5

#   Swaping:
# unbind \{
# unbind \}

# bind M-h swap-pane -L
# bind M-l swap-pane -R
# bind M-j swap-pane -D
# bind M-k swap-pane -U

set -g @copy_command pbcopy

# set copy_command variable according to OS
if-shell 'uname | grep -iq darwin' \
    'set -g @copy_command pbcopy' \
    'if-shell "uname | grep -iq CYGWIN" \
        "set -g @copy_command clip" \
        "set -g @copy_command xsel --clipboard --input"'

set -s set-clipboard off

# vi copy mode
setw -g mode-keys vi

# to enter in copy-mode
bind -n M-e copy-mode

# begin selection by pressing v
bind -T copy-mode-vi v send -X begin-selection
# yank the selected texted with y
bind -T copy-mode-vi y send-keys -X copy-pipe-no-clear "#{@copy_command}"
# yank (to clipboard) the selected texted with Y
bind -T copy-mode-vi Y send-keys -X copy-pipe-and-cancel "#{@copy_command}"

# copy selected text to clipboard (same as C-a Y)
bind -T copy-mode-vi C-c send -X copy-pipe-no-clear "#{@copy_command}"
# paste from the tmux buffer with PREFIX + P
bind P paste-buffer

#
# Mouse Operations
#
set -g mouse on
# select pane and clear selection on mouse-click
bind -T copy-mode-vi MouseDown1Pane select-pane \; send -X clear-selection
# exit copy mode on right-click
bind -T copy-mode-vi MouseDown3Pane select-pane \; send -X cancel

# cancel/clear selection + paste the selection contents into current pane on middle-mouse-click
# bind -T copy-mode-vi MouseDown2Pane \
#     send -X cancel \; \
#     run-shell -d 0.1 "tmux set-buffer \"$(#{@copy_command})\"; tmux paste-buffer"

# allows selection via mouse
bind -T copy-mode-vi MouseDragEnd1Pane send -X copy-pipe-no-clear "#{@copy_command}"
# bind -T copy-mode-vi MouseDown1Pane send -X pipe-and-cancel
# bind -T copy-mode-vi MouseDown1Pane send-keys -X cancel
bind -T copy-mode-vi DoubleClick1Pane \
    send -X select-word \; \
    run-shell -d 0.3 \; \
    send -X copy-pipe-no-clear "#{@copy_command}"
bind -T copy-mode-vi TripleClick1Pane \; \
    send -X select-line \; \
    run-shell -d 0.3 \; \
    send -X copy-pipe-no-clear "#{@copy_command}"

bind -T root DoubleClick1Pane \
    copy-mode -H \; \
    send -X select-word \; \
    run-shell -d 0.3 \; \
    send -X copy-pipe-no-clear "#{@copy_command}"
bind -T root TripleClick1Pane \
    copy-mode -H \; \
    send -X select-line \; \
    run-shell -d 0.3 \; \
    send -X copy-pipe-no-clear "#{@copy_command}"

# Make middle-mouse-click paste from the primary selection (without having to hold down Shift).
# -n is an alias to -T root
# bind-key -T root MouseDown2Pane run "tmux set-buffer \"$(xsel -b)\"; tmux paste-buffer"
bind-key -T root MouseDown2Pane run "tmux set-buffer \"\$($(#{@copy_command}))\"; tmux paste-buffer"

setenv -g DISPLAY :0

#
# Log
#

# Prefix+L: Print visible scrollback buffer to a file
unbind L
bind L capture-pane \; save-buffer $HOME/tmux-log.txt
# Pipe the current pane to a log file with Shift-h - Press Shift-h again to stop.
bind H pipe-pane -o "cat >>$HOME/tmux_#S_#I-#W_#P.log" \; display-message "Toggled logging to: $HOME/tmux_#S_#I-#W_#P.log"
# p for Print to file: save all scrollback buffer to a file
#                      (131072 is the history-limit)
bind -n C-p command-prompt -p 'Save all history to:' -I '~/tmux-history_#S_#I-#W_#P.log' 'capture-pane -S -131072 ; save-buffer %1 ; delete-buffer'

bind t run-shell -b "sh -c 'mate manage 2>/dev/null || true'"
# bind n run-shell -b "mate -n"
bind o run-shell -b "sh -c 'mate kickoff 2>/dev/null || true'"

# Others

set-option -g history-limit 10000
set -g terminal-overrides 'xterm*:smcup@:rmcup@'

# set -g @plugin 'jimeh/tmux-themepack'
# set -g @plugin "arcticicestudio/nord-tmux"

set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'schasse/tmux-jump'
set -g @plugin 'tmux-plugins/tpm'

# List of plugins
set -g @tpm_plugins ' \
    dracula/tmux \
    tmux-plugins/tmux-sensible \
'

# set -g @themepack 'powerline/double/cyan'

# available plugins: battery, cpu-usage, git, gpu-usage, ram-usage, tmux-ram-usage, network, network-bandwidth, network-ping, ssh-session, attached-clients, network-vpn, weather, time, mpc, spotify-tui, playerctl, kubernetes-context, synchronize-panes
set -g @dracula-plugins "cpu-usage ram-usage weather time"
set -g @dracula-refresh-rate 1
# set -g @dracula-battery-label "Battery"
set -g @dracula-show-powerline true
set -g @dracula-fixed-location "Berlin"
set -g @dracula-show-fahrenheit false
set -g @dracula-show-flags true
set -g @dracula-show-left-icon session
set -g @dracula-border-contrast false
# for left
set -g @dracula-show-left-sep 
# for right symbol (can set any symbol you like as separator)
set -g @dracula-show-right-sep 

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'github_username/plugin_name#branch'
# set -g @plugin 'git@github.com:user/plugin'
# set -g @plugin 'git@bitbucket.com:user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
